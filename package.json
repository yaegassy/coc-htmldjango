{
  "name": "coc-htmldjango",
  "version": "0.14.10",
  "description": "django templates (htmldjango) extension for coc.nvim. Provides formatter, snippets completion and more...",
  "author": "yaegassy <yosstools@gmail.com>",
  "license": "MIT",
  "main": "lib/index.js",
  "keywords": [
    "coc.nvim",
    "django",
    "jinja2",
    "python",
    "vim",
    "neovim"
  ],
  "engines": {
    "coc": "^0.0.80"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/yaegassy/coc-htmldjango"
  },
  "scripts": {
    "snippets": "yarn snippets:tags && yarn snippets:filters && node fixSnippets.js",
    "snippets:tags": "curl -o snippets/tags.json https://raw.githubusercontent.com/vscode-django/vscode-django/main/snippets/templates/tags.json",
    "snippets:filters": "curl -o snippets/filters.json https://raw.githubusercontent.com/vscode-django/vscode-django/main/snippets/templates/filters.json",
    "lint": "eslint src --ext ts",
    "clean": "rimraf lib",
    "watch": "node esbuild.js --watch",
    "build": "node esbuild.js",
    "prepare": "node esbuild.js"
  },
  "prettier": {
    "singleQuote": true,
    "printWidth": 120,
    "semi": true
  },
  "devDependencies": {
    "@types/mustache": "^4.2.2",
    "@types/node": "^18.16.18",
    "@types/rimraf": "^3.0.2",
    "@types/semver": "^7.3.10",
    "@types/tmp": "^0.2.3",
    "@types/which": "^2.0.1",
    "@typescript-eslint/eslint-plugin": "^5.60.1",
    "@typescript-eslint/parser": "^5.60.1",
    "coc.nvim": "^0.0.82",
    "esbuild": "^0.16.17",
    "eslint": "^8.43.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^4.2.1",
    "prettier": "^2.8.8",
    "rimraf": "^3.0.2",
    "semver": "^7.3.7",
    "tmp": "^0.2.1",
    "typescript": "^5.0.4",
    "which": "^2.0.2"
  },
  "activationEvents": [
    "onLanguage:htmldjango"
  ],
  "contributes": {
    "rootPatterns": [
      {
        "filetype": "htmldjango",
        "patterns": [
          "pyproject.toml",
          ".djlintrc"
        ]
      }
    ],
    "configuration": {
      "type": "object",
      "title": "coc-htmldjango configuration",
      "properties": {
        "htmldjango.enable": {
          "type": "boolean",
          "default": true,
          "description": "Enable coc-htmldjango extension"
        },
        "htmldjango.completion.enable": {
          "type": "boolean",
          "default": true,
          "description": "Enable snippets completion"
        },
        "htmldjango.completion.exclude": {
          "type": "array",
          "default": [
            "autoescape_paste",
            "comment_paste",
            "comment_selection",
            "for_paste",
            "forempty_paste",
            "if_paste",
            "ifelse_paste",
            "spaceless_paste",
            "verbatim_paste",
            "with_selection",
            "with_paste",
            "trans_paste",
            "blocktrans_paste",
            "blocktrans_with_paste",
            "translate_paste",
            "blocktranslate_paste",
            "blocktranslate_with_paste"
          ],
          "description": "Exclude specific key in snippet completion"
        },
        "htmldjango.hoverLang": {
          "type": "string",
          "default": "django",
          "enum": [
            "django",
            "jinja2"
          ],
          "description": "Set the template language to be used for the hover"
        },
        "htmldjango.builtin.pythonPath": {
          "type": "string",
          "default": "",
          "description": "Python 3.x path (Absolute path) to be used for built-in install"
        },
        "htmldjango.formatting.provider": {
          "type": "string",
          "default": "djlint",
          "description": "Provider for formatting. Possible options include 'djlint', 'djhtml' and 'none'",
          "enum": [
            "djlint",
            "djhtml",
            "none"
          ]
        },
        "htmldjango.djlint.commandPath": {
          "type": "string",
          "default": "",
          "description": "The custom path to the djlint (Absolute path)."
        },
        "htmldjango.djlint.enableLint": {
          "type": "boolean",
          "default": true,
          "description": "Enable djLint lint (diagnostics)"
        },
        "htmldjango.djlint.lintOnOpen": {
          "type": "boolean",
          "default": true,
          "description": "Lint file on opening"
        },
        "htmldjango.djlint.lintOnChange": {
          "type": "boolean",
          "default": true,
          "description": "Lint file on change"
        },
        "htmldjango.djlint.lintOnSave": {
          "type": "boolean",
          "default": true,
          "description": "Lint file on save"
        },
        "htmldjango.djlint.include": {
          "type": "string",
          "default": "",
          "description": "Codes to include (--include)"
        },
        "htmldjango.djlint.ignore": {
          "type": "string",
          "default": "",
          "description": "Codes to ignore (--ignore)"
        },
        "htmldjango.djlint.ignoreCase": {
          "type": "boolean",
          "default": false,
          "description": "Do not fix case on known html tags (--ignore-case)"
        },
        "htmldjango.djlint.ignoreBlocks": {
          "type": "string",
          "default": "",
          "description": "Comma list of template blocks to not indent (--ignore-blocks)"
        },
        "htmldjango.djlint.indent": {
          "type": "number",
          "default": 4,
          "description": "Indent spacing (--indent)"
        },
        "htmldjango.djlint.profile": {
          "type": "string",
          "default": "django",
          "description": "Enable defaults by template language (--profile). ops: django, jinja, nunjucks, handlebars, golang",
          "enum": [
            "html",
            "django",
            "jinja",
            "nunjucks",
            "handlebars",
            "golang",
            "angular"
          ]
        },
        "htmldjango.djlint.useGitIgnore": {
          "type": "boolean",
          "default": false,
          "description": "Use .gitignore file to extend excludes (--use-gitignore)"
        },
        "htmldjango.djlint.preserveLeadingSpace": {
          "type": "boolean",
          "default": false,
          "description": "Attempt to preserve leading space on text (--preserve-leading-space)"
        },
        "htmldjango.djlint.preserveBlankLines": {
          "type": "boolean",
          "default": false,
          "description": "Attempt to preserve blank lines (--preserve-blank-lines)"
        },
        "htmldjango.djlint.formatCss": {
          "type": "boolean",
          "default": false,
          "description": "Also format contents of <style> tags (--format-css)"
        },
        "htmldjango.djlint.formatJs": {
          "type": "boolean",
          "default": false,
          "description": "Also format contents of <script> tags (--format-js)"
        },
        "htmldjango.djlint.addLinterArgs": {
          "type": "array",
          "description": "Additional arguments passed to djlint linter",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "htmldjango.djlint.addFormatterArgs": {
          "type": "array",
          "description": "Additional arguments passed to djlint formatter",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "htmldjango.djhtml.commandPath": {
          "type": "string",
          "default": "",
          "description": "The custom path to the djhtml (Absolute path)."
        },
        "htmldjango.djhtml.tabWidth": {
          "type": "number",
          "default": 4,
          "description": "Set tabwidth (--tabwidth)"
        }
      }
    },
    "commands": [
      {
        "command": "htmldjango.showOutput",
        "title": "Show htmldjango output channel"
      },
      {
        "command": "htmldjango.builtin.installTools",
        "title": "Install htmldjango related tools"
      },
      {
        "command": "htmldjango.djlint.format",
        "title": "Run djLint format"
      },
      {
        "command": "htmldjango.djhtml.format",
        "title": "Run DjHTML format"
      },
      {
        "command": "htmldjango.showReferences",
        "title": "Show  Variables Block (`{{ ... }}`) or TemplateTags Block (`{% ... %}`) location information for the current file"
      }
    ]
  },
  "dependencies": {
    "mustache": "^4.2.0",
    "toml": "^3.0.0"
  }
}
